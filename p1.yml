Resources:
  AppNode:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-0ac019f4fcb7cb7e6
      KeyName: GroupOne
      SecurityGroups:
        - !Ref AppNodeSG
  AppNodeSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: for the app nodes that allow ssh, http and docker ports
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '2375'
        ToPort: '2375'
        CidrIp: 0.0.0.0/0
#we need the db instance and SG
  DatabaseInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: "stairsdb" #may need to change these
      Engine: MySQL
      MasterUsername: stairs1 #i just copy and pasted these from the lab
      MasterUserPassword: password123
      DBInstanceClass: db.t2.micro
      AllocatedStorage: '5'
      DBSecurityGroups:
        - !Ref DatabaseSG
  DatabaseSG:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      GroupDescription: Security Group for RDS public access
      DBSecurityGroupIngress:
        - CIDRIP: 0.0.0.0/0
  #RedshiftCluster:
  #  Type: AWS::Redshift::Cluster
  #  Properties:
  #    DBName: "stairsquerydb"
  #    MasterUsername: stairs2
  #    MasterUserPassword: password123
  #    NodeType: ds2.xlarge
  #    ClusterType: single-node
    #  SecurityGroups:
    #    - !Ref RedshiftClusterSG
  #RedshiftClusterSG:
  #  Type: AWS::Redshift::ClusterSecurityGroup
  #  Properties:
  #    GroupDescription: Security Group for Redshift Clusters
    #  RedshiftClusterSGIngressIP:
      #  Type: AWS::Redshift::ClusterSecurityGroupIngress
      #  CIDRIP: 0.0.0.0/0
        #Properties:
        #  ClusterSecurityGroupName:
        #    -  !Ref RedshiftClusterSG
